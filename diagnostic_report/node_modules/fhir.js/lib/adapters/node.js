// Generated by CoffeeScript 1.9.3
(function() {
  var adapter, auth, merge, mkFhir, request, searchByPatient, utils, wrappToErrbackForm;

  request = require('request');

  mkFhir = require('../fhir');

  merge = require('merge');

  utils = require('../utils');

  auth = require('../middlewares/httpAuthentication');

  searchByPatient = require('../middlewares/searchByPatient');

  merge = require('merge');

  adapter = {
    http: function(q) {
      q = merge(true, q);
      q.headers = q.headers || {};
      q.headers["Accept"] = "application/json";
      q.headers["Content-Type"] = "application/json";
      q.body = q.data;
      q.json = true;
      return request(q, function(err, response, body) {
        var headers;
        headers = function(x) {
          return response.headers[x.toLowerCase()];
        };
        if (err) {
          return q.error(err, response.statusCode, headers, q);
        } else if (response.statusCode > 399) {
          return q.error(body, response.statusCode, headers, q);
        } else {
          return q.success(body, response.statusCode, headers, q);
        }
      });
    }
  };

  wrappToErrbackForm = function(fhir, fn) {
    return function(opt, cb) {
      if (cb) {
        opt.callback = cb;
      }
      opt = merge(true, opt, {
        success: function(res, status, headersFn, query) {
          if (cb) {
            return cb(null, res, status, headersFn, query);
          }
        },
        error: function(err, status, headersFn, query) {
          if (cb) {
            return cb(err, null, status, headersFn, query);
          }
        }
      });
      return fhir[fn](opt);
    };
  };

  module.exports = function(config) {
    var defaultMiddlewares, fhir, middlewares, ret;
    defaultMiddlewares = {
      http: [auth],
      search: [searchByPatient]
    };
    middlewares = utils.mergeLists(config.middlewares, defaultMiddlewares);
    config = merge(true, config, {
      middlewares: middlewares
    });
    fhir = mkFhir(config, adapter);
    ret = ["search", "conformance", "document", "profile", "transaction", "history", "create", "read", "update", "delete", "vread", "resolve"].reduce((function(acc, v) {
      acc[v] = wrappToErrbackForm(fhir, v);
      return acc;
    }), {});
    ret.resolveSync = fhir.resolveSync;
    return ret;
  };

}).call(this);
